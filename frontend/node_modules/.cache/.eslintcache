[{"/Users/huedward/alphaFinance/webcode/frontend/src/index.js":"1","/Users/huedward/alphaFinance/webcode/frontend/src/reportWebVitals.js":"2","/Users/huedward/alphaFinance/webcode/frontend/src/App.js":"3","/Users/huedward/Desktop/alphaFinanaceWebcode/frontend/src/index.js":"4","/Users/huedward/Desktop/alphaFinanaceWebcode/frontend/src/reportWebVitals.js":"5","/Users/huedward/Desktop/alphaFinanaceWebcode/frontend/src/App.js":"6"},{"size":500,"mtime":1619667962882,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1619667962883,"results":"9","hashOfConfig":"8"},{"size":13105,"mtime":1619734576857,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1619667962882,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1619667962883,"results":"13","hashOfConfig":"12"},{"size":16687,"mtime":1619793823104,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11nb5yh",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"73sp6i",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/huedward/alphaFinance/webcode/frontend/src/index.js",[],"/Users/huedward/alphaFinance/webcode/frontend/src/reportWebVitals.js",[],"/Users/huedward/alphaFinance/webcode/frontend/src/App.js",["29","30","31","32","33","34","35","36","37","38","39"],"/Users/huedward/Desktop/alphaFinanaceWebcode/frontend/src/index.js",[],["40","41"],"/Users/huedward/Desktop/alphaFinanaceWebcode/frontend/src/reportWebVitals.js",[],"/Users/huedward/Desktop/alphaFinanaceWebcode/frontend/src/App.js",["42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Icon from '@material-ui/core/Icon';\nimport { LineChart, PieChart } from 'react-chartkick'\nimport 'chartkick/chart.js'\n\n\nfunction App() {\n\n\n\n\n\n\n  const [openRecent, setOpenRecent] = React.useState(false);\n  const [recentView, setRecentView] = React.useState([]);\n  const [openfavorites, setOpenfavorites] = React.useState(false);\n  const [favorites, setfavorites] = React.useState([]);\n  const [openSector, setOpenSector] = React.useState(false);\n  const [sector, setSector] = React.useState([]);\n  const [sectorCheckList, setSectorCheckList] = React.useState([]);\n\n  const [selectedStock, setSelectedStock] = React.useState(\"\");\n  const [listOfStock, setListOfStock] = React.useState([]);\n  const [listOfHistory, setListOfHistory] = React.useState([]);\n  const [listOfIndustry, setListOfIndustry] = React.useState([]);\n  const [recommendStock, setRecommendStock] = React.useState([]);\n  const [inputUsername, setInputUsername] = React.useState(\"\");\n  const [inputPassword, setInputPassword] = React.useState(\"\");\n  const [inputSearch, setInputSearch] = React.useState(\"\");\n  const [username, setUsername] = React.useState(\"\");\n  const [userid, setUserid] = React.useState(\"\");\n  const [historyData, setHistoryData] = React.useState([])\n\n  const useStyles = makeStyles((theme) => ({\n\n    paper: {\n      padding: theme.spacing(5),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    root: {\n      height: 500\n    },\n    gridroot: {\n      flexGrow: 1,\n      marginLeft: '50rem'\n    },\n    griditem:{\n      margin: 0\n    },\n    paperColumn: {\n      height: 540\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    bottomblock: {\n      height: 100\n    },\n    allowScrow: {\n      overflowY: \"scroll\"\n    },\n    comfirm: {\n      height: 55\n    },\n    likeButton: {\n      top: -50,\n      left: \"90%\",\n    },\n    dialogPaper: {\n      height: 300\n    }\n  }));\n  const classes = useStyles();\n\n  var handleLogin = () => {\n    fetch(\"http://localhost:4000/login?username=\"+inputUsername+\"&password=\"+inputPassword)\n    .then(resp => resp.json()).then(resp=>{\n        setUsername(resp.message[0][\"account_name\"])\n        setUserid(resp.message[0][\"user_id\"])\n    }).catch(err=>console.log(err))\n  };\n\n\n\n  var handleFilter = (callback) => {\n\n    var fitersQuery = \"\"\n    if (sectorCheckList){\n      fitersQuery = \"filterList[]=\"\n    }\n    fitersQuery += sectorCheckList.join(\"&filterList[]=\");\n    callback(fitersQuery);\n\n  };\n\n  var handleFilterOut = (input) => {\n    fetch(\"http://localhost:4000/filter?\"+input+\"&searchquery=\"+inputSearch)\n    .then(resp => resp.json()).then(resp=>{\n        setListOfStock(resp.message)\n    }).catch(err=>console.log(err))\n  };\n\n\n  var handleVisit = () =>{\n    console.log(\"selectedStock: \" + selectedStock)\n    fetch(\"http://localhost:4000/visit?visitedstock=\"+selectedStock+\"&user_id=\"+userid)\n    .then(resp => resp.json()).then(resp=>{\n      if (userid){\n        setRecentView(recentView => [...recentView, selectedStock])\n      }\n        setSelectedStock(\"\");\n    }).catch(err=>console.log(err))\n  };\n\n  var getVisit = () =>{\n\n    fetch(\"http://localhost:4000/getvisit?&user_id=\"+userid)\n    .then(resp => resp.json()).then(resp=>{\n\n        var views = [];\n        for (const element of resp.message){\n          views.push(element.symbol)\n        }\n        console.log(views)\n        setRecentView(views);\n    }).catch(err=>console.log(err))\n  };\n\n\n  var handleFavorite = () =>{\n    console.log(\"Handling favorite\")\n    console.log(\"selectedStock: \" + selectedStock)\n    fetch(\"http://localhost:4000/favorite?visitedstock=\"+selectedStock+\"&user_id=\"+userid)\n    .then(resp => resp.json()).then(resp=>{\n      if (favorites.indexOf(selectedStock) !== -1){\n        setfavorites(favorites.filter(item => item !== selectedStock))\n      }else{\n        setfavorites(favorites => [...favorites, selectedStock])\n      }\n      advanced();\n    }).catch(err=>console.log(err))\n  };\n\n  var advanced = () =>{\n    console.log(\"advanced\")\n    fetch(\"http://localhost:4000/advanced?selectedStock=\"+selectedStock)\n    .then(resp => resp.json()).then(resp=>{\n      handleGetRecommand()\n    }).catch(err=>console.log(err))\n  };\n\n  var getFavorite = () =>{\n    fetch(\"http://localhost:4000/getfavorite?&user_id=\"+userid)\n    .then(resp => resp.json()).then(resp=>{\n        console.log(\"getting favorite\")\n        var views = [];\n        for (const element of resp.message){\n          views.push(element.symbol)\n        }\n        console.log(views)\n        setfavorites(views);\n    }).catch(err=>console.log(err))\n  }\n\n  var handleGetRecommand = () => {\n    fetch(\"http://localhost:4000/getRecommand\")\n    .then(resp => resp.json()).then(resp=>{\n      console.log(\"getting Recommand\")\n        var views = [];\n        for (const element of resp.message){\n          views.push(element.symbol)\n        }\n        console.log(\"recommand:\", views)\n        setRecommendStock(views);\n    }).catch(err=>console.log(err))\n  }\n\n\n  var handleSector = () => {\n    console.log(\"HandleSector\")\n    fetch(\"http://localhost:4000/sector\")\n    .then(resp => resp.json()).then(resp=>{\n      setSector(resp.message)\n    }).catch(err=>console.log(err))\n  }\n\n  var handleSectorCheckList = (item) => {\n    if (sectorCheckList.indexOf(item) !== -1){\n      setSectorCheckList(sectorCheckList.filter(stuff => stuff !== item))\n    }else{\n      setSectorCheckList(sectorCheckList => [...sectorCheckList, item])\n    }\n  }\n\n  var handleEnter =()=>{\n    fetch(\"http://localhost:4000/history?&symbol=\"+selectedStock)\n    .then(resp => resp.json()).then(resp=>{\n        setHistoryData(resp.message)\n    }).catch(err=>console.log(err))\n  }\n\n  React.useEffect(() => {\n    handleFilter(handleFilterOut);\n  }, [sectorCheckList]);\n\n  React.useEffect(() => {\n    handleSector();\n  }, []);\n\n  React.useEffect(() => {\n    if (userid){\n      getVisit();\n    }\n  }, [userid]);\n\n  React.useEffect(() => {\n    if (userid){\n      getFavorite();\n    }\n  }, [userid]);\n\n  React.useEffect(() => {\n    if (userid){\n      handleGetRecommand();\n    }\n  }, [userid]);\n\n  // React.useEffect(() => {\n  //   if (userid){\n  //     handleGetRecommand();\n  //   }\n  // }, [favorites]);\n\n\n\n\n  return (\n      <div className=\"App\">\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n\n      <Dialog onEnter={handleEnter} onClose={handleVisit} fullWidth maxWidth=\"500px\" aria-labelledby=\"simple-dialog-title\" open={selectedStock}>\n        <div  className={classes.dialogPaper}>\n         <DialogTitle id=\"simple-dialog-title\">{selectedStock} </DialogTitle>\n         <Button variant=\"outlined\" color=\"primary\" onClick={handleFavorite} className={classes.likeButton} >\n          {favorites.indexOf(selectedStock) !== -1 ? <Icon color=\"primary\">favorite</Icon> : <Icon color=\"primary\">favorite_border</Icon>}\n         </Button>\n         <div  className={classes.allowScrow}>\n         <ListItem>\n         <Grid container spacing={1}>\n\n           <Grid item className={classes.griditem} xs={1}/>\n           <Grid item className={classes.griditem} xs={2}>\n             Date\n           </Grid>\n           <Grid item className={classes.griditem} xs={2}>\n             Open Price\n           </Grid>\n           <Grid item className={classes.griditem} xs={2}>\n             Close Price\n           </Grid>\n           <Grid item className={classes.griditem} xs={2}>\n             Day High\n           </Grid>\n           <Grid item className={classes.griditem} xs={3}>\n             Day Low\n           </Grid>\n         </Grid>\n         </ListItem>\n         {historyData.map(item => {\n           return (\n             <ListItem>\n             <Grid container spacing={1}>\n\n               <Grid item className={classes.griditem} xs={1}/>\n               <Grid item className={classes.griditem} xs={2}>\n                 {item.Date_PK}\n               </Grid>\n               <Grid item className={classes.griditem} xs={2}>\n                 {item.Open_Price}\n               </Grid>\n               <Grid item className={classes.griditem} xs={2}>\n                 {item.Close_Price}\n               </Grid>\n               <Grid item className={classes.griditem} xs={2}>\n                 {item.Day_High}\n               </Grid>\n               <Grid item className={classes.griditem} xs={3}>\n                 {item.Day_Low}\n               </Grid>\n             </Grid>\n             </ListItem>\n           )\n         })}\n         </div>\n         </div>\n       </Dialog>\n\n      <Grid container spacing={3}>\n\n        <Grid item className={classes.griditem} xs={12}/>\n        <Grid item className={classes.griditem} xs={1}/>\n        <Grid item className={classes.griditem} xs={4}>\n        <TextField value={inputSearch} onChange={(e)=>{setInputSearch(e.target.value)}} fullWidth id=\"search\" label=\"Search\" variant=\"outlined\" />\n        </Grid>\n        <Grid item className={classes.griditem} xs={1}>\n        <Button variant=\"outlined\" color=\"primary\" onClick={()=>{handleFilter(handleFilterOut)}} className={classes.comfirm}>\n         <Icon color=\"primary\">done</Icon>\n        </Button>\n        </Grid>\n\n        <Grid item className={classes.griditem} xs={2}>\n        <TextField value={inputUsername} onChange={(e)=>{setInputUsername(e.target.value)}} fullWidth id=\"username\" label=\"Username\" variant=\"outlined\" />\n        </Grid>\n\n        <Grid item className={classes.griditem} xs={2}>\n        <TextField type=\"password\" value={inputPassword} onChange={(e)=>{setInputPassword(e.target.value)}} fullWidth id=\"password\" label=\"Password\" variant=\"outlined\" />\n        </Grid>\n        <Grid item className={classes.griditem} xs={1}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleLogin} className={classes.comfirm}>\n           <Icon color=\"primary\">login</Icon>\n          </Button>\n        </Grid>\n        <Grid item className={classes.griditem} xs={1}/>\n\n        <Grid item className={classes.griditem} xs={1}/>\n        <Grid item className={classes.paperColumn} xs={2}>\n        <Paper >\n          <div className={classes.allowScrow}>\n           <List\n              component=\"nav\"\n              aria-labelledby=\"nested-list-subheader\"\n              className={classes.root}\n            >\n              <ListItem button onClick={() => {setOpenSector(!openSector)}}>\n                <ListItemText primary=\"Industry\" />\n                {openSector ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={openSector} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                  {sector.map(item =>{\n                    return(\n                      <ListItem button className={classes.nested}>\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={sectorCheckList.indexOf(item.sector) !== -1}\n                              onChange={() => { handleSectorCheckList(item.sector) }}\n                              inputProps={{ 'aria-label': 'primary checkbox' }}\n                            />\n                          }\n                          label={item.sector}\n                        />\n                      </ListItem>\n                    )\n                  })}\n\n\n                </List>\n              </Collapse>\n            </List>\n          </div>\n        </Paper>\n        </Grid>\n\n        <Grid item className={classes.paperColumn} xs={6}>\n        <Paper >\n          <div className={classes.allowScrow}>\n          <List className={classes.root}>\n          {listOfStock.map(item => {\n            return (\n              <ListItem button onClick={()=>{setSelectedStock(item.symbol)}}>\n              <Grid container spacing={1}>\n\n                <Grid item className={classes.griditem} xs={1}/>\n                <Grid item className={classes.griditem} xs={2}>\n                  {item.symbol}\n                </Grid>\n                <Grid item className={classes.griditem} xs={7}>\n                  {\"(\"+item.company_name+\")\"}\n                </Grid>\n                <Grid item className={classes.griditem} xs={2}>\n                  {item.market_price}\n                </Grid>\n              </Grid>\n              </ListItem>\n            )\n          })}\n          </List>\n          </div>\n        </Paper>\n        </Grid>\n\n        <Grid item className={classes.paperColumn} xs={2}>\n        <Paper >\n          <div className={classes.allowScrow}>\n          <List\n             component=\"nav\"\n             aria-labelledby=\"nested-list-subheader\"\n             className={classes.root}\n           >\n             <ListItem button onClick={() => {setOpenRecent(!openRecent)}}>\n               <ListItemText primary=\"Recent View\" />\n               {openRecent ? <ExpandLess /> : <ExpandMore />}\n             </ListItem>\n             <Collapse in={openRecent} timeout=\"auto\" unmountOnExit>\n               <List component=\"div\" disablePadding>\n                 {recentView.map(item => {\n                   return (\n                     <ListItem button onClick={()=>{setSelectedStock(item)}} className={classes.nested}>\n                       <ListItemText primary={item} />\n                     </ListItem>\n                   )\n                 })}\n               </List>\n             </Collapse>\n             <ListItem button onClick={() => {setOpenfavorites(!openfavorites)}}>\n               <ListItemText primary=\"Favorites\" />\n               {openfavorites ? <ExpandLess /> : <ExpandMore />}\n             </ListItem>\n             <Collapse in={openfavorites} timeout=\"auto\" unmountOnExit>\n               <List component=\"div\" disablePadding>\n                 {favorites.map(item => {\n                   return (\n                     <ListItem button onClick={()=>{setSelectedStock(item)}} className={classes.nested}>\n                       <ListItemText primary={item} />\n                     </ListItem>\n                   )\n                 })}\n               </List>\n             </Collapse>\n           </List>\n           </div>\n        </Paper>\n\n        </Grid>\n        <Grid item className={classes.griditem} xs={1}/>\n\n\n\n        <Grid item className={classes.griditem} xs={1}/>\n\n        <Grid item className={classes.bottomblock} xs={2} button onClick= {()=>{setSelectedStock(recommendStock[0])}}>\n        <Paper >\n          <div className={classes.bottomblock}>\n          {recommendStock[0]}\n          </div>\n        </Paper>\n        </Grid>\n        <Grid item className={classes.bottomblock} xs={2} button onClick= {()=>{setSelectedStock(recommendStock[1])}}>\n        <Paper >\n          <div className={classes.bottomblock}>\n          {recommendStock[1]}\n          </div>\n        </Paper>\n        </Grid>\n        <Grid item className={classes.bottomblock} xs={2} button onClick= {()=>{setSelectedStock(recommendStock[2])}}>\n        <Paper>\n          <div className={classes.bottomblock}>\n          {recommendStock[2]}\n          </div>\n        </Paper>\n        </Grid>\n        <Grid item className={classes.bottomblock} xs={2} button onClick= {()=>{setSelectedStock(recommendStock[3])}}>\n        <Paper>\n          <div className={classes.bottomblock}>\n          {recommendStock[3]}\n          </div>\n        </Paper>\n        </Grid>\n        <Grid item className={classes.bottomblock} xs={2} button onClick= {()=>{setSelectedStock(recommendStock[4])}}>\n        <Paper>\n          <div className={classes.bottomblock}>\n          {recommendStock[4]}\n          </div>\n        </Paper>\n        </Grid>\n\n        <Grid item className={classes.griditem} xs={1}/>\n  </Grid>\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":20},{"ruleId":"58","severity":1,"message":"63","line":11,"column":8,"nodeType":"60","messageId":"61","endLine":11,"endColumn":17},{"ruleId":"58","severity":1,"message":"64","line":12,"column":8,"nodeType":"60","messageId":"61","endLine":12,"endColumn":18},{"ruleId":"58","severity":1,"message":"65","line":13,"column":8,"nodeType":"60","messageId":"61","endLine":13,"endColumn":16},{"ruleId":"58","severity":1,"message":"66","line":92,"column":10,"nodeType":"60","messageId":"61","endLine":92,"endColumn":14},{"ruleId":"58","severity":1,"message":"67","line":92,"column":16,"nodeType":"60","messageId":"61","endLine":92,"endColumn":23},{"ruleId":"58","severity":1,"message":"68","line":96,"column":22,"nodeType":"60","messageId":"61","endLine":96,"endColumn":35},{"ruleId":"58","severity":1,"message":"69","line":102,"column":21,"nodeType":"60","messageId":"61","endLine":102,"endColumn":33},{"ruleId":"58","severity":1,"message":"70","line":106,"column":10,"nodeType":"60","messageId":"61","endLine":106,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":190,"column":6,"nodeType":"73","endLine":190,"endColumn":23,"suggestions":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"79","line":3,"column":17,"nodeType":"60","messageId":"61","endLine":3,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":20},{"ruleId":"58","severity":1,"message":"63","line":11,"column":8,"nodeType":"60","messageId":"61","endLine":11,"endColumn":17},{"ruleId":"58","severity":1,"message":"64","line":12,"column":8,"nodeType":"60","messageId":"61","endLine":12,"endColumn":18},{"ruleId":"58","severity":1,"message":"65","line":13,"column":8,"nodeType":"60","messageId":"61","endLine":13,"endColumn":16},{"ruleId":"58","severity":1,"message":"80","line":24,"column":10,"nodeType":"60","messageId":"61","endLine":24,"endColumn":19},{"ruleId":"58","severity":1,"message":"81","line":24,"column":21,"nodeType":"60","messageId":"61","endLine":24,"endColumn":29},{"ruleId":"58","severity":1,"message":"82","line":45,"column":10,"nodeType":"60","messageId":"61","endLine":45,"endColumn":23},{"ruleId":"58","severity":1,"message":"83","line":45,"column":25,"nodeType":"60","messageId":"61","endLine":45,"endColumn":41},{"ruleId":"58","severity":1,"message":"84","line":46,"column":10,"nodeType":"60","messageId":"61","endLine":46,"endColumn":24},{"ruleId":"58","severity":1,"message":"85","line":46,"column":26,"nodeType":"60","messageId":"61","endLine":46,"endColumn":43},{"ruleId":"58","severity":1,"message":"70","line":51,"column":10,"nodeType":"60","messageId":"61","endLine":51,"endColumn":18},{"ruleId":"71","severity":1,"message":"86","line":226,"column":6,"nodeType":"73","endLine":226,"endColumn":23,"suggestions":"87"},{"ruleId":"71","severity":1,"message":"88","line":236,"column":6,"nodeType":"73","endLine":236,"endColumn":14,"suggestions":"89"},{"ruleId":"71","severity":1,"message":"90","line":242,"column":6,"nodeType":"73","endLine":242,"endColumn":14,"suggestions":"91"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ListItemIcon' is defined but never used.","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'SendIcon' is defined but never used.","'shit' is assigned a value but never used.","'setShit' is assigned a value but never used.","'setFavourites' is assigned a value but never used.","'setLikeStock' is assigned a value but never used.","'username' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'handleFilter'. Either include it or remove the dependency array.","ArrayExpression",["92"],"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"'useState' is defined but never used.","'LineChart' is defined but never used.","'PieChart' is defined but never used.","'listOfHistory' is assigned a value but never used.","'setListOfHistory' is assigned a value but never used.","'listOfIndustry' is assigned a value but never used.","'setListOfIndustry' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'handleFilter' and 'handleFilterOut'. Either include them or remove the dependency array.",["95"],"React Hook React.useEffect has a missing dependency: 'getVisit'. Either include it or remove the dependency array.",["96"],"React Hook React.useEffect has a missing dependency: 'getFavorite'. Either include it or remove the dependency array.",["97"],{"desc":"98","fix":"99"},"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [checkPublishing, handleFilter]",{"range":"106","text":"107"},"Update the dependencies array to be: [handleFilter, handleFilterOut, sectorCheckList]",{"range":"108","text":"109"},"Update the dependencies array to be: [getVisit, userid]",{"range":"110","text":"111"},"Update the dependencies array to be: [getFavorite, userid]",{"range":"112","text":"113"},[5284,5301],"[checkPublishing, handleFilter]",[6816,6833],"[handleFilter, handleFilterOut, sectorCheckList]",[6966,6974],"[getVisit, userid]",[7053,7061],"[getFavorite, userid]"]