[{"/Users/huedward/alphaFinance/webcode/frontend/src/index.js":"1","/Users/huedward/alphaFinance/webcode/frontend/src/reportWebVitals.js":"2","/Users/huedward/alphaFinance/webcode/frontend/src/App.js":"3","/Users/huedward/Desktop/alphaFinanaceWebcode/frontend/src/index.js":"4","/Users/huedward/Desktop/alphaFinanaceWebcode/frontend/src/reportWebVitals.js":"5","/Users/huedward/Desktop/alphaFinanaceWebcode/frontend/src/App.js":"6"},{"size":500,"mtime":1619667962882,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1619667962883,"results":"9","hashOfConfig":"8"},{"size":13105,"mtime":1619734576857,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1619667962882,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1619667962883,"results":"13","hashOfConfig":"12"},{"size":13844,"mtime":1619755986014,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11nb5yh",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"73sp6i",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/huedward/alphaFinance/webcode/frontend/src/index.js",[],"/Users/huedward/alphaFinance/webcode/frontend/src/reportWebVitals.js",[],"/Users/huedward/alphaFinance/webcode/frontend/src/App.js",["28","29","30","31","32","33","34","35","36","37","38"],"/Users/huedward/Desktop/alphaFinanaceWebcode/frontend/src/index.js",[],"/Users/huedward/Desktop/alphaFinanaceWebcode/frontend/src/reportWebVitals.js",[],"/Users/huedward/Desktop/alphaFinanaceWebcode/frontend/src/App.js",["39","40","41","42","43","44","45","46","47","48"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Icon from '@material-ui/core/Icon';\n\n\n\nfunction App() {\n\n\n  const sampleListOfStock = [\n    {\n      symbol: \"AAPL\",\n      company: \"Apple\",\n      Price: \"5.0\",\n      ListOfHistoryPrice:[\n        {price: \"1.0\"},\n        {price: \"1.2\"},\n        {price: \"1.4\"},\n        {price: \"1.6\"},\n        {price: \"1.8\"}\n      ]\n    },\n    {\n      symbol: \"GGGGG\",\n      company: \"Apple\",\n      Price: \"5.0\",\n      ListOfHistoryPrice:[\n        {price: \"1.0\"},\n        {price: \"1.2\"},\n        {price: \"1.4\"},\n        {price: \"1.6\"},\n        {price: \"1.8\"}\n      ]\n    },\n    {\n      symbol: \"BBBBB\",\n      company: \"Apple\",\n      Price: \"5.0\",\n      ListOfHistoryPrice:[\n        {price: \"1.0\"},\n        {price: \"1.2\"},\n        {price: \"1.4\"},\n        {price: \"1.6\"},\n        {price: \"1.8\"}\n      ]\n    }\n  ]\n  const sampleRecommendStock = [\n    {\n      symbol: \"FUCK\",\n      Price: \"5.0\"\n    },\n    {\n      symbol: \"GGGGG\",\n      Price: \"5.0\"\n    },\n    {\n      symbol: \"BBBBB\",\n      Price: \"5.0\"\n    },\n    {\n    symbol: \"GGGGG\",\n    Price: \"5.0\"\n  },\n  {\n    symbol: \"BBBBB\",\n    Price: \"5.0\"\n  }\n  ]\n  const sampleRecentView = [\"AAPL\"];\n\n  const [shit, setShit] = useState(\"I am shit\");\n  const [openRecent, setOpenRecent] = React.useState(false);\n  const [recentView, setRecentView] = React.useState(sampleRecentView);\n  const [openfavorites, setOpenfavorites] = React.useState(false);\n  const [favorites, setfavorites] = React.useState([]);\n  const [openIndustry, setOpenIndustry] = React.useState(false);\n  const [checkPublishing, setCheckPublishing] = React.useState(false);\n  const [checkEntertainment, setCheckEntertainment] = React.useState(false);\n  const [selectedStock, setSelectedStock] = React.useState(\"\");\n  const [listOfStock, setListOfStock] = React.useState(sampleListOfStock);\n  const [recommendStock, setRecommendStock] = React.useState(sampleRecommendStock);\n  const [inputUsername, setInputUsername] = React.useState(\"\");\n  const [inputPassword, setInputPassword] = React.useState(\"\");\n  const [inputSearch, setInputSearch] = React.useState(\"\");\n  const [username, setUsername] = React.useState(\"\");\n\n  const useStyles = makeStyles((theme) => ({\n\n    paper: {\n      padding: theme.spacing(5),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    root: {\n      height: 500\n    },\n    gridroot: {\n      flexGrow: 1,\n      marginLeft: '50rem'\n    },\n    griditem:{\n      margin: 0\n    },\n    paperColumn: {\n      height: 540\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    bottomblock: {\n      height: 100\n    },\n    allowScrow: {\n      overflowY: \"scroll\"\n    },\n    comfirm: {\n      height: 55\n    },\n    likeButton: {\n      top: -50,\n      left: \"90%\",\n    },\n    dialogPaper: {\n      height: 300\n    }\n  }));\n  const classes = useStyles();\n\n  var handleLogin = () => {\n    fetch(\"http://localhost:4000/login?username=\"+inputUsername+\"&password=\"+inputPassword)\n    .then(resp => resp.json()).then(resp=>{\n        setUsername(resp.message)\n    }).catch(err=>console.log(err))\n  };\n\n  var handleSearch = () => {\n    fetch(\"http://localhost:4000/search?searchquery=\"+inputSearch)\n    .then(resp => resp.json()).then(resp=>{\n        setListOfStock(resp.message)\n    }).catch(err=>console.log(err))\n  };\n\n  var handleFilter = (callback) => {\n\n    var fitersQuery = \"\"\n    var listOfFilter = [];\n    if (checkPublishing) { listOfFilter.push(\"Publishing\") }\n    if (checkEntertainment) { listOfFilter.push(\"Entertainment\") }\n    if (listOfFilter){\n      fitersQuery = \"filterList[]=\"\n    }\n    fitersQuery += listOfFilter.join(\"&filterList[]=\");\n\n    callback(fitersQuery);\n\n  };\n\n  var handleFilterOut = (inputSearch) => {\n    fetch(\"http://localhost:4000/filter?\"+inputSearch)\n    .then(resp => resp.json()).then(resp=>{\n        setListOfStock(resp.message)\n    }).catch(err=>console.log(err))\n  }\n\n\n  var handleVisit = () =>{\n    fetch(\"http://localhost:4000/visit?visitedstock=\"+selectedStock)\n    .then(resp => resp.json()).then(resp=>{\n        setRecentView(resp.message);\n        setSelectedStock(\"\");\n    }).catch(err=>console.log(err))\n  }\n\n  var handleFavorite = () =>{\n    console.log(\"Handling favorite\")\n    if (favorites.indexOf(selectedStock) !== -1){\n      setfavorites(favorites.filter(item => item !== selectedStock))\n    }else{\n      setfavorites(favorites => [...favorites, selectedStock])\n    }\n  }\n\n  React.useEffect(() => {\n    handleFilter(handleFilterOut);\n  }, [checkPublishing]);\n\n  return (\n      <div className=\"App\">\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n\n      <Dialog onClose={()=>{handleVisit() }} fullWidth maxWidth=\"500px\" aria-labelledby=\"simple-dialog-title\" open={selectedStock}>\n        <div  className={classes.dialogPaper}>\n         <DialogTitle id=\"simple-dialog-title\">I dont know what jiyu wants here, I just know he is a retard who clicked {selectedStock}.</DialogTitle>\n         <Button variant=\"outlined\" color=\"primary\" onClick={handleFavorite} className={classes.likeButton} >\n          {favorites.indexOf(selectedStock) !== -1 ? <Icon color=\"primary\">favorite</Icon> : <Icon color=\"primary\">favorite_border</Icon>}\n         </Button>\n         </div>\n       </Dialog>\n\n      <Grid container spacing={3}>\n\n        <Grid item className={classes.griditem} xs={12}/>\n        <Grid item className={classes.griditem} xs={1}/>\n        <Grid item className={classes.griditem} xs={4}>\n        <TextField value={inputSearch} onChange={(e)=>{setInputSearch(e.target.value)}} fullWidth id=\"search\" label=\"Search\" variant=\"outlined\" />\n        </Grid>\n        <Grid item className={classes.griditem} xs={1}>\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleSearch} className={classes.comfirm}>\n         <Icon color=\"primary\">done</Icon>\n        </Button>\n        </Grid>\n\n        <Grid item className={classes.griditem} xs={2}>\n        <TextField value={inputUsername} onChange={(e)=>{setInputUsername(e.target.value)}} fullWidth id=\"username\" label=\"Username\" variant=\"outlined\" />\n        </Grid>\n\n        <Grid item className={classes.griditem} xs={2}>\n        <TextField value={inputPassword} onChange={(e)=>{setInputPassword(e.target.value)}} fullWidth id=\"password\" label=\"Password\" variant=\"outlined\" />\n        </Grid>\n        <Grid item className={classes.griditem} xs={1}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleLogin} className={classes.comfirm}>\n           <Icon color=\"primary\">login</Icon>\n          </Button>\n        </Grid>\n        <Grid item className={classes.griditem} xs={1}/>\n\n        <Grid item className={classes.griditem} xs={1}/>\n        <Grid item className={classes.paperColumn} xs={2}>\n        <Paper >\n          <div className={classes.allowScrow}>\n           <List\n              component=\"nav\"\n              aria-labelledby=\"nested-list-subheader\"\n              className={classes.root}\n            >\n              <ListItem button onClick={() => {setOpenIndustry(!openIndustry)}}>\n                <ListItemText primary=\"Industry\" />\n                {openIndustry ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={openIndustry} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                  <ListItem button className={classes.nested}>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={checkPublishing}\n                          onChange={() => {setCheckPublishing(!checkPublishing) }}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        />\n                      }\n                      label=\"Publishing\"\n                    />\n                  </ListItem>\n                  <ListItem button className={classes.nested}>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={checkEntertainment}\n                          onChange={() => {setCheckEntertainment(!checkEntertainment)}}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        />\n                      }\n                      label=\"Entertainment\"\n                    />\n\n                  </ListItem>\n                </List>\n              </Collapse>\n            </List>\n          </div>\n        </Paper>\n        </Grid>\n\n        <Grid item className={classes.paperColumn} xs={6}>\n        <Paper >\n          <div className={classes.allowScrow}>\n          <List className={classes.root}>\n          {listOfStock.map(item => {\n            return (\n              <ListItem button onClick={()=>{setSelectedStock(item.symbol)}}>\n                {item.symbol + \"(\" + item.company + \")\"}\n                {\"Today's price:\" + item.Price}\n                {item.ListOfHistoryPrice.map(historyItem => {\n                  return (\n                    <ListItem>\n                      {historyItem.price}\n                    </ListItem>\n                  )\n                })}\n              </ListItem>\n            )\n          })}\n          </List>\n          </div>\n        </Paper>\n        </Grid>\n\n        <Grid item className={classes.paperColumn} xs={2}>\n        <Paper >\n          <div className={classes.allowScrow}>\n          <List\n             component=\"nav\"\n             aria-labelledby=\"nested-list-subheader\"\n             className={classes.root}\n           >\n             <ListItem button onClick={() => {setOpenRecent(!openRecent)}}>\n               <ListItemText primary=\"Recent View\" />\n               {openRecent ? <ExpandLess /> : <ExpandMore />}\n             </ListItem>\n             <Collapse in={openRecent} timeout=\"auto\" unmountOnExit>\n               <List component=\"div\" disablePadding>\n                 {recentView.map(item => {\n                   return (\n                     <ListItem button onClick={()=>{setSelectedStock(item)}} className={classes.nested}>\n                       <ListItemText primary={item} />\n                     </ListItem>\n                   )\n                 })}\n               </List>\n             </Collapse>\n             <ListItem button onClick={() => {setOpenfavorites(!openfavorites)}}>\n               <ListItemText primary=\"favorites\" />\n               {openfavorites ? <ExpandLess /> : <ExpandMore />}\n             </ListItem>\n             <Collapse in={openfavorites} timeout=\"auto\" unmountOnExit>\n               <List component=\"div\" disablePadding>\n                 {favorites.map(item => {\n                   return (\n                     <ListItem button onClick={()=>{setSelectedStock(item)}} className={classes.nested}>\n                       <ListItemText primary={item} />\n                     </ListItem>\n                   )\n                 })}\n               </List>\n             </Collapse>\n           </List>\n           </div>\n        </Paper>\n\n        </Grid>\n        <Grid item className={classes.griditem} xs={1}/>\n\n\n\n        <Grid item className={classes.griditem} xs={1}/>\n\n        <Grid item className={classes.bottomblock} xs={2} button onClick= {()=>{setSelectedStock(recommendStock[0].symbol)}}>\n        <Paper >\n          <div className={classes.bottomblock}>\n          {recommendStock[0].symbol}\n          {recommendStock[0].Price}\n          </div>\n        </Paper>\n        </Grid>\n        <Grid item className={classes.bottomblock} xs={2} button onClick= {()=>{setSelectedStock(recommendStock[1].symbol)}}>\n        <Paper >\n          <div className={classes.bottomblock}>\n          {recommendStock[1].symbol}\n          {recommendStock[1].Price}\n          </div>\n        </Paper>\n        </Grid>\n        <Grid item className={classes.bottomblock} xs={2} button onClick= {()=>{setSelectedStock(recommendStock[2].symbol)}}>\n        <Paper>\n          <div className={classes.bottomblock}>\n          {recommendStock[2].symbol}\n          {recommendStock[2].Price}\n          </div>\n        </Paper>\n        </Grid>\n        <Grid item className={classes.bottomblock} xs={2} button onClick= {()=>{setSelectedStock(recommendStock[3].symbol)}}>\n        <Paper>\n          <div className={classes.bottomblock}>\n          {recommendStock[3].symbol}\n          {recommendStock[3].Price}\n          </div>\n        </Paper>\n        </Grid>\n        <Grid item className={classes.bottomblock} xs={2} button onClick= {()=>{setSelectedStock(recommendStock[4].symbol)}}>\n        <Paper>\n          <div className={classes.bottomblock}>\n          {recommendStock[4].symbol}\n          {recommendStock[4].Price}\n          </div>\n        </Paper>\n        </Grid>\n\n        <Grid item className={classes.griditem} xs={1}/>\n  </Grid>\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},{"ruleId":"49","severity":1,"message":"53","line":8,"column":8,"nodeType":"51","messageId":"52","endLine":8,"endColumn":20},{"ruleId":"49","severity":1,"message":"54","line":11,"column":8,"nodeType":"51","messageId":"52","endLine":11,"endColumn":17},{"ruleId":"49","severity":1,"message":"55","line":12,"column":8,"nodeType":"51","messageId":"52","endLine":12,"endColumn":18},{"ruleId":"49","severity":1,"message":"56","line":13,"column":8,"nodeType":"51","messageId":"52","endLine":13,"endColumn":16},{"ruleId":"49","severity":1,"message":"57","line":92,"column":10,"nodeType":"51","messageId":"52","endLine":92,"endColumn":14},{"ruleId":"49","severity":1,"message":"58","line":92,"column":16,"nodeType":"51","messageId":"52","endLine":92,"endColumn":23},{"ruleId":"49","severity":1,"message":"59","line":96,"column":22,"nodeType":"51","messageId":"52","endLine":96,"endColumn":35},{"ruleId":"49","severity":1,"message":"60","line":102,"column":21,"nodeType":"51","messageId":"52","endLine":102,"endColumn":33},{"ruleId":"49","severity":1,"message":"61","line":106,"column":10,"nodeType":"51","messageId":"52","endLine":106,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":190,"column":6,"nodeType":"64","endLine":190,"endColumn":23,"suggestions":"65"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},{"ruleId":"49","severity":1,"message":"53","line":8,"column":8,"nodeType":"51","messageId":"52","endLine":8,"endColumn":20},{"ruleId":"49","severity":1,"message":"54","line":11,"column":8,"nodeType":"51","messageId":"52","endLine":11,"endColumn":17},{"ruleId":"49","severity":1,"message":"55","line":12,"column":8,"nodeType":"51","messageId":"52","endLine":12,"endColumn":18},{"ruleId":"49","severity":1,"message":"56","line":13,"column":8,"nodeType":"51","messageId":"52","endLine":13,"endColumn":16},{"ruleId":"49","severity":1,"message":"57","line":92,"column":10,"nodeType":"51","messageId":"52","endLine":92,"endColumn":14},{"ruleId":"49","severity":1,"message":"58","line":92,"column":16,"nodeType":"51","messageId":"52","endLine":92,"endColumn":23},{"ruleId":"49","severity":1,"message":"66","line":102,"column":26,"nodeType":"51","messageId":"52","endLine":102,"endColumn":43},{"ruleId":"49","severity":1,"message":"61","line":106,"column":10,"nodeType":"51","messageId":"52","endLine":106,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":206,"column":6,"nodeType":"64","endLine":206,"endColumn":23,"suggestions":"67"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ListItemIcon' is defined but never used.","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'SendIcon' is defined but never used.","'shit' is assigned a value but never used.","'setShit' is assigned a value but never used.","'setFavourites' is assigned a value but never used.","'setLikeStock' is assigned a value but never used.","'username' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'handleFilter'. Either include it or remove the dependency array.","ArrayExpression",["68"],"'setRecommendStock' is assigned a value but never used.",["69"],{"desc":"70","fix":"71"},{"desc":"70","fix":"72"},"Update the dependencies array to be: [checkPublishing, handleFilter]",{"range":"73","text":"74"},{"range":"75","text":"74"},[5284,5301],"[checkPublishing, handleFilter]",[5534,5551]]