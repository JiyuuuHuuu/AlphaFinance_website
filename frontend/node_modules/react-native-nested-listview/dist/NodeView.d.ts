import React, { ReactElement } from 'react';
export interface INode {
    _internalId: string;
    hidden: boolean;
    opened: boolean;
    [key: string]: any;
}
export interface IProps {
    getChildrenName: (item: INode) => string;
    node: INode;
    level: number;
    onNodePressed?: (item: INode) => void;
    renderNode: (item: INode, level: number, isLastLevel: boolean) => ReactElement;
    renderChildrenNode?: (item: INode) => ReactElement;
    extraData?: any;
    keepOpenedState?: boolean;
}
export interface IState {
    node: INode;
    extraData?: any;
    opened: boolean;
}
declare const NodeView: React.MemoExoticComponent<({ renderNode, extraData, level, getChildrenName, node, onNodePressed, keepOpenedState, }: IProps) => JSX.Element>;
export { NodeView };
